{"version":3,"file":"widget-creator.umd.js","sources":["../src/e2aWidget/models/firebase/config-key.js","../src/e2aWidget/models/firebase/firebase.js","../src/e2aWidget/models/widget-model.js","../src/server/server-widgets.js","../src/server/manager-widgets.js","../src/server/widget_item.js","../src/server/server-gadgets.js","../src/server/manager-gadgets.js","../src/creator/creator.js","../src/clone/clone.js"],"sourcesContent":["\nimport CryptoJS from \"crypto-js\"\n\nexport default function() {\n    const key = CryptoJS.enc.Utf8.parse(\"hf8685nfhfhjs9h8\");\n    const iv1 = CryptoJS.enc.Utf8.parse(\"hf8685nfhfhjs9h8\");\n    const plainText = CryptoJS.AES.decrypt('nQcXOmRHFeJxZtK8z0vg6mw+56NosLs/8I9POQWFEBs5ZJzqraJEe+9S6xaW8eHpNubzsmX+5qvFciisOtgvu57msPSmcPy3wnRYPzRbKDen30JgAaY6uzufSp+tZBeeMEDLVBJwPu/vSLd7qJdw3ofJ4uiIACAPiuKcg5k//ox3n1elzqwdMpBgsLkIhvo8YFnGWVGHr52t8inxEY28w6JV6RLOe95+6lwQoy94998FQNKyHg08GHCxaDXLb2gPwpgIHj8fS/SJAjxE8UTPBS8r+4IL3RH3HseQLHW4pkFW0aCtlwjPtKsziGIMTFcjQhIVxw648OC7MCaXTfuvUszpdboCWEH6SYCa1xgluKzgASnhDZJbU65mV0sqnGh8NFRxcrzU6eCGNKIyfS61b+6vfJD1NnsBhHXnwiCHewqavymbBWyl3Wt31UptpM4kVH7WLoZohbH509x5KMqJtg==', key, {\n        keySize: 16,\n        iv: iv1,\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    \n    return JSON.parse(plainText.toString(CryptoJS.enc.Utf8));\n}","import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\nimport config from \"./config-key.js\"\n\n// Your web app's Firebase configuration\nconst fconfig = config();\n//console.log(\"fconfig\",fconfig);\n// Initialize Firebase\nconst app = initializeApp(fconfig, 'users-rtdb');\nconst rdb = getDatabase(app);\n\nexport { rdb }\n","import { rdb } from \"./firebase/firebase.js\"\nimport { ref, get, onValue, set } from \"firebase/database\";\n\nconst rdbmode = \"dev\" //\"dev\" //\"prod\"\nconst paths = {\n    \"prod\": \"/prod/\",\n    \"dev\": \"/dev/\"\n}\nconst rdbref = (path) => {\n    //console.log(\"acessando...\",paths[rdbmode]+path);\n    return ref(rdb, paths[rdbmode] + path)\n}\n\nexport default {\n    rdb,\n    rdbref,\n\n    async get(path) {\n        let snap = await get(rdbref(path))\n        return snap.val()\n    },\n\n    onValue(path, func) {\n        onValue(rdbref(path), (snap) => {\n            func(snap.val())\n        })\n    },\n\n    async set(path, value) {\n        await set(rdbref(path), value)\n    },\n}","import chokidar from 'chokidar'\nimport appRoot from 'app-root-path'\nimport chalk from 'chalk'\nimport { readFileSync } from 'fs'\nimport manager from './manager-widgets.js'\n\nconst server = {\n    cfg_widgets: '',\n    path: appRoot.path + \"/\",\n    user_dev: {}, \n\n    init(config) {\n        //console.log('config',config);\n        server.cfg_widgets = config.widgets_folder\n        server.path = server.path + server.cfg_widgets\n        server.user_dev = config.user_dev\n\n        const watcher = chokidar.watch(server.path, {\n            persistent: true\n        });\n        watcher\n            .on('change', (path, stats) => {\n                let path_names = path.split(`/${server.cfg_widgets}/`)\n                //console.log(path_names)\n                server.fileChange(path, path_names[1], stats.size)\n            })\n            console.log('📡 ' + chalk.green.bold(`escutando por widgets na pasta `)+server.cfg_widgets);        \n    },\n\n    async read(filePath) {\n        try {\n            let data = readFileSync(filePath, { encoding: 'utf8' })\n            return data\n        } catch (error) {\n            if (error.code == 'ENOENT') {\n                console.log(`[${filePath}] não encontrado!`);\n            } else {\n                console.log(`[${filePath}] ERRO desconhecido!`);\n            }\n        }\n    },\n\n    async fileChange(path, fileName, size) {\n        //console.log({path,fileName,size});\n        console.log('👀 ' + chalk.blue.bold(`Opa! percebi algo...`));\n        console.log('👀 ' + chalk.green.bold(`[${fileName}] alterado...`));\n        let data = await server.read(path)\n        //console.log(\"data\", data);\n        let m = manager(server.user_dev) \n        await m.parse(data)\n        if(m.widget.parseOk) {\n            //console.log('parse ok');\n            //console.log('m.widget',m.widget.widget_info);\n            await m.publish_widget()\n            console.log('📡 ' + chalk.green.bold(`escutando por widgets na pasta `) + server.cfg_widgets);\n        }\n    }\n\n}\n\nexport default server","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\nimport widget_item from \"./widget_item.js\"\n\nconst manager = function (userdev) {\n    const self = {\n        widget: null,\n        userdev,\n\n        async parse(data) {\n            self.widget = await widget_item(data, self.userdev)\n        },\n\n        async publish_widget() {\n            //console.log('self.widget.pathWG',self.widget.pathWG);\n\n            await self.checkNewVersion()\n            if (self.widget.widget_info.prod == undefined) {\n                self.widget.widget_info.prod = false\n            }\n            let widget_new = self.widget.widget_info\n            widget_new.template = self.widget.template\n            widget_new.script = self.widget.script\n            await widget_model.set(self.widget.pathWG, widget_new)\n            console.log(`🚀 widget ${self.widget.infoLog()} versão ${widget_new.version} PUBLICADA!`);\n            let path_dev = self.widget.pathWGUser+'/'+widget_new.namespace+'/'+widget_new.id\n            await widget_model.set(path_dev, widget_new.namespace + '/' + widget_new.id)\n        },\n\n        async checkNewVersion() {\n            let widget_info = self.widget.widget_info \n            let widget = self.widget.widget_last\n            //console.log('widget.commit', widget.commit);\n            //console.log('widget_info.commit', widget_info.commit);\n            if (widget.commit != undefined && widget.commit != widget_info.commit) {\n                console.log('🔥 novo commit ' + chalk.green.bold(`[${widget.id}] [${widget.name}] ${widget_info.commit}`));\n                //let backup_path = 'widgets_backup/' + widget_info.namespace + '/' + widget.id + '/' + widget.version\n                await widget_model.set(self.widget.pathWGBkp, widget)\n                console.log('🗃️  widget antigo ' + chalk.green.bold(`[${widget.id}] [${widget.name}] backup versão ${widget.version} armazenado`));\n                widget.version++\n            }\n\n        }\n    }\n    return self\n}\n\nexport default manager","import { parseComponent } from 'vue-sfc-parser'\nimport chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\n\nconst widget_item = async function (data, userdev) {\n\n    const self = {\n        widget_info: {},\n        widget_last: {},\n        template: '',\n        script: '',\n        userdev,\n        parseOk: false,\n        pathWG: 'widgets/',\n        pathWGUser: 'users_devs/',\n        pathWGBkp: 'widgets_backup/',\n\n        parse(data) {\n            const res = parseComponent(data)\n            //console.log(res.styles);\n            //return\n            if (res.template == null) {\n                console.log('🙁 ' + chalk.red.bold(`erro ao interpretar template...`));\n                return\n            }\n            let template = res.template.content.trim()\n            //console.log(template)\n            if (res.script != null) {\n                //console.log(res.script.content)\n                let tokens = res.script.content.split('export default')\n                let script = tokens[1].trim()\n\n                //console.log(script);\n                try {\n                    let func = new Function('widget,wg', `return ` + script)\n                    let scriptObj = func()\n                    //console.log('scriptObj', scriptObj);\n                    let widget_info = self.getWidgetInfo(scriptObj)\n                    if (widget_info == null) {\n                        console.log('🙁 ' + chalk.red.bold(`não foi possível a publicação...`));\n                        return\n                    }\n                    self.widget_info = widget_info\n                    self.template = template\n                    self.script = script\n                    self.parseOk = true\n                    //listener.publish_widget(widget_info, template, script)\n                } catch (e) {\n                    console.log('🙁 ' + chalk.red.bold(`Ohh não! script com erro...`));\n                    console.log(chalk.blue(e.name) + ': ' + chalk.red(e.message));\n                }\n            } else {\n                console.log('🙁 ' + chalk.red.bold(`erro ao interpretar script...`));\n            }\n        },\n\n        getWidgetInfo(scriptObj) {\n            let widget_info = scriptObj.widget\n            if (widget_info == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`informações do widget não encontradas...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [widget] no component?`));\n                return null\n            }\n            if (widget_info.name == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`nome do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [name] p/ o widget?`));\n                return null\n            }\n            if (widget_info.id == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`id do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [id] p/ o widget?`));\n                return null\n            }\n            if (widget_info.namespace == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`namespace do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [namespace] p/ o widget?`));\n                return null\n            }\n            if (widget_info.commit == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`commit do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [commit] p/ o widget?`));\n                return null\n            }\n            console.log('👀 widget ' + chalk.green.bold(`[${widget_info.id}] [${widget_info.name}] encontrado...`));\n            return widget_info\n        },\n\n        async checkFirstVersion() {\n            let widget = await widget_model.get(self.pathWG)\n            if(widget == null) {\n                console.log(`👀 widget ${self.infoLog()} PRIMEIRA VERSÃO`);\n                self.widget_info.devs = {}\n                self.widget_info.devs[self.userdev.id] = self.userdev\n            } else {\n                console.log(`👀 widget ${self.infoLog()} ${widget.version} ENCONTRADA`);\n                self.widget_info.devs = widget.devs\n                self.widget_info.devs[self.userdev.id] = self.userdev\n                self.widget_last = widget\n            }\n        },\n\n        infoLog() {\n            let wg = self.widget_info\n            return chalk.green.bold(`[🏷️ NS:${wg.namespace}] [🪪 ID:${wg.id}] [NAME:${wg.name}]`)\n        }\n    }\n    self.parse(data)\n    if (self.parseOk) {\n        self.pathWG = self.pathWG + self.widget_info.namespace + '/' + self.widget_info.id\n        self.pathWGUser = self.pathWGUser + self.userdev.id+'/widgets'\n        self.pathWGBkp = self.pathWGBkp + self.widget_info.namespace + '/' + self.widget_info.id + '/' + self.widget_info.version\n        await self.checkFirstVersion()\n    } else {\n        self.pathWG = self.pathWG + 'no-id'\n        self.pathWGUser = self.pathWGUser + 'no-id'\n        self.pathWGBkp = self.pathWGBkp + 'no-id'\n    }\n    return self\n}\n\nexport default widget_item","import chokidar from 'chokidar'\nimport appRoot from 'app-root-path'\nimport chalk from 'chalk'\nimport { readFileSync, existsSync } from 'fs'\nimport manager from './manager-gadgets.js'\nimport sharp from 'sharp'\n\nconst server = {\n    cfg_gadgets: '',\n    path: appRoot.path + \"/\",\n    user_dev: {},\n\n    init(config) {\n        //console.log('config',config);\n        server.cfg_gadgets = config.gadgets_folder\n        server.path = server.path + server.cfg_gadgets\n        server.user_dev = config.user_dev\n\n        const watcher = chokidar.watch(server.path, {\n            persistent: true\n        });\n        watcher.on('change', (path, stats) => {\n            let path_names = path.split(`/${server.cfg_gadgets}/`)\n            //console.log(path_names)\n            server.fileChange(path, path_names[1], stats.size)\n        })\n        console.log('📡 ' + chalk.green.bold(`escutando por GADGETS na pasta `) + server.cfg_gadgets);\n    },\n\n    async read(filePath) {\n        try {\n            let data = readFileSync(filePath, { encoding: 'utf8' })\n            return data\n        } catch (error) {\n            if (error.code == 'ENOENT') {\n                console.log(`[${filePath}] não encontrado!`);\n            } else {\n                console.log(`[${filePath}] ERRO desconhecido!`);\n            }\n        }\n    },\n\n    async fileChange(path, fileName, size) {\n        //console.log({path,fileName,size});\n        console.log('👀 ' + chalk.blue.bold(`Opa! percebi algo...`));\n        console.log('👀 ' + chalk.green.bold(`[${fileName}] alterado...`));\n\n        let pathJSON = ''\n        let pathMD = ''\n        let dotPosition = path.lastIndexOf(\".\")\n        let extension = path.substr(dotPosition)\n        //console.log('extension',extension);\n        if (extension == '.json') {\n            //console.log('json alterado');\n            pathJSON = path\n            pathMD = path.substr(0, dotPosition) + '.md'\n        } else {\n            //console.log('md alterado');\n            pathJSON = path.substr(0, dotPosition) + '.json'\n            pathMD = path\n        }\n        //console.log('pathJSON',pathJSON);\n        //console.log('pathMD',pathMD);\n        let dataJSON = await server.read(pathJSON)\n        let dataMD = await server.read(pathMD)\n        //console.log(\"dataJSON\", dataJSON);\n        //console.log(\"dataMD\", dataMD);\n\n        let m = manager(server.user_dev)\n        await m.parse(dataJSON, dataMD)\n        if (m.gadget.parseOk) {\n            //console.log('parse ok');\n            let data_icon = await server.loadIcon(m.gadget, path)\n            if (!data_icon) {\n                console.log('🙁 ' + chalk.red.bold(`GADGET com problemas...`));\n            } else {\n                m.gadget.icon = data_icon\n            }\n            await m.publish_gadget()\n            console.log('📡 ' + chalk.green.bold(`escutando por GADGETS na pasta `) + server.cfg_gadgets);\n        } else {\n            console.log('🙁 ' + chalk.red.bold(`GADGET parse error...`));\n        }\n    },\n\n    async loadIcon(gadget, path) {\n        let slash_position = path.lastIndexOf(\"/\")\n        let path_folder = path.substr(0, slash_position)\n        //console.log('path_folder', path_folder);\n        //console.log('gadget.icon', gadget.icon);\n        if (gadget.icon.charAt(0) == '@') {\n            let icon_file_name = gadget.icon.substr(1)\n            //console.log('icon_file_name', icon_file_name);\n            let file_path = path_folder + '/' + icon_file_name\n            let exist = await existsSync(file_path)\n            if (exist) {\n                let image = await sharp(file_path)\n                const metadata = await image.metadata()\n                //console.log('metadata',metadata);\n                let size_prefer = 64\n                if(metadata.width != size_prefer || metadata.height != size_prefer) {\n                    console.log('📸 ' + chalk.red.bold(`Tamanho da imagem do icone diferente de ${size_prefer}x${size_prefer}...`)+' redimensionando...');\n                }\n                let img_new = image.resize(size_prefer, size_prefer)\n                let img_buffer = await img_new.toBuffer()\n                let img_base64 = img_buffer.toString('base64')\n                //let image = await sharp('./artes/logo.svg')\n                console.log('📸 ' + chalk.green.bold(`Imagem do icone gerada: ${img_base64.length} bytes`)+ ' ✔️');\n                //console.log(img_base64);\n                //console.log(img_base64.length);\n                let data_uri_prefix = 'data:image/' + metadata.format + ';base64,'\n                let data = data_uri_prefix + img_base64\n                //console.log('data', data);\n                return data\n            } else {\n                console.log('🙁 ' + chalk.red.bold(`imagem do icone `) + icon_file_name + chalk.red.bold(' não encontrada'));\n                return false\n            }\n        }\n        return gadget.icon\n    }\n}\n\nexport default server","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\n//import widget_item from \"./widget_item.js\"\n\nconst manager = function (userdev) {\n    const self = {\n        gadget: null,\n        userdev,\n\n        async parse(dataJSON, dataMD) {\n            let objJSON = JSON.parse(dataJSON)\n            //console.log(objJSON);\n            //console.log(dataMD);\n            let ok = self.checkDataJSON(objJSON)\n            if (!ok) {\n                self.gadget = { parseOk: false } //await widget_item(data, self.userdev)\n                return false\n            } else {\n                self.gadget = objJSON\n                self.gadget.readme = dataMD\n                self.gadget.parseOk = true\n            }\n        },\n\n        async publish_gadget() {\n            //console.log('self.gadget', self.gadget);\n            await self.checkNewVersion()\n            if (self.gadget.prod == undefined) {\n                self.gadget.prod = false\n            }\n            let path = `gadgets/${self.gadget.category}/${self.gadget.id}`\n            await widget_model.set(path, self.gadget)\n            // Atualizando desenvolvedor\n            let path_dev = `users_devs/${self.userdev.id}/gadgets/${self.gadget.category}/${self.gadget.id}`\n            //console.log(path_dev,`${self.gadget.category}|${self.gadget.id}`);\n            await widget_model.set(path_dev, `${self.gadget.category}|${self.gadget.id}`)\n            console.log('🚀 novo gadget ' + chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] versão ${self.gadget.version} PUBLICADO!`));\n        },\n\n        async checkNewVersion() {\n            let path = `gadgets/${self.gadget.category}/${self.gadget.id}`\n            //console.log('path', path);\n            let gadget_last = await widget_model.get(path)\n            if (gadget_last == null) {\n                console.log(`👀 gadget ${chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] ${self.gadget.commit}`)} PRIMEIRA VERSÃO`);\n                self.gadget.version = 1\n                return\n            } else {\n                self.gadget.version = gadget_last.version\n            }\n            //console.log('gadget_last', gadget_last);\n            if (gadget_last.commit != self.gadget.commit) {\n                console.log('🔥 novo commit ' + chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] ${self.gadget.commit}`));\n                //let backup_path = 'widgets_backup/' + widget_info.namespace + '/' + widget.id + '/' + widget.version\n                let backup_path = `gadgets_backup/${self.gadget.category}/${self.gadget.id}/${self.gadget.version}`\n                await widget_model.set(backup_path, gadget_last)\n                console.log('🗃️  gadget antigo ' + chalk.green.bold(`[${gadget_last.category}] [${gadget_last.id}] backup versão ${gadget_last.version} armazenado`));\n                if(self.gadget.version == undefined) {\n                    self.gadget.version = 1\n                } else { \n                    self.gadget.version++\n                }\n            }\n\n        },\n\n        missingField(field, attribute_name, location) {\n            if (field == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n                return false\n            }\n            return true\n        },\n\n        checkDataJSON(objJSON) {\n            if (!self.missingField(objJSON.id, 'id', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.category, 'category', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.name, 'name', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.commit, 'commit', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.author, 'author', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.description, 'description', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.homepage, 'homepage', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.icon, 'icon', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.main_widget, 'main_widget', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.main_widget_namespace, 'main_widget_namespace', 'JSON do gadget')) {\n                return false\n            }\n            console.log('👀 gadget ' + chalk.green.bold(`[${objJSON.id}] [${objJSON.name}] ok`));\n            return true\n        },\n\n    }\n    return self\n}\n\nexport default manager","import chalk from 'chalk'\nimport server_widgets from \"../server/server-widgets.js\"\nimport server_gadgets from \"../server/server-gadgets.js\"\n\nconst creator = {\n    prefix: '',\n    user_dev: '',\n    set_config: false,\n    config: undefined,\n\n    setPrefix(prefix) {\n        creator.prefix = prefix\n    },\n\n    missingField(field, attribute_name, location) {\n        if (field == undefined) {\n            console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n            console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n            return false\n        } \n        return true\n    },\n\n    setConfig(config) {\n        creator.set_config = true\n        if(!creator.missingField(config.user_dev,'user_dev','config.json')) {\n            return\n        }\n        if(!creator.missingField(config.user_dev.id,'user_dev.id','config.json')) {\n            return\n        }\n        if(!creator.missingField(config.user_dev.name,'user_dev.name','config.json')) {\n            return\n        }\n        creator.config = config\n        creator.user_dev = config.user_dev\n    },\n\n    splash() {\n        console.log(\"🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱\");\n        console.log(`  🟥🔷 ${creator.prefix} widget`);\n        console.log(\"  {}🟪 CREATOR (v 1.0)\");\n        console.log(\"🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱\");\n\n        console.log(chalk.yellow.bold(`👨‍💻 Olá ${creator.user_dev.name}!`));\n    },\n\n    init() {\n        if(!creator.set_config) {\n            console.log('🙁 ' + chalk.red.bold(`config não inicializado...`));\n            console.log('🤔 ' + chalk.blue(`você chamou setConfig() ?`));\n            return\n        }\n        creator.splash()\n        server_widgets.init(creator.config)\n        server_gadgets.init(creator.config)\n    }\n}\n\nexport default creator","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\nimport { writeFileSync } from 'fs'\n\nconst clone = {\n    prefix: '',\n    user_dev: '',\n    set_config: false,\n    config: undefined,\n\n    setPrefix(prefix) {\n        clone.prefix = prefix\n    },\n\n    missingField(field, attribute_name, location) {\n        if (field == undefined) {\n            console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n            console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n            return false\n        } \n        return true\n    },\n\n    setConfig(config) {\n        clone.set_config = true\n        if(!clone.missingField(config.user_dev,'user_dev','config.json')) {\n            return\n        }\n        if(!clone.missingField(config.user_dev.id,'user_dev.id','config.json')) {\n            return\n        }\n        if(!clone.missingField(config.user_dev.name,'user_dev.name','config.json')) {\n            return\n        }\n        clone.config = config\n        clone.user_dev = config.user_dev\n    },\n\n    splash() {\n        console.log(\"〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️\");\n        console.log(`  🟥🔷 ${clone.prefix} widget`);\n        console.log(\"  {}🟪 CLONE (v 1.0)\");\n        console.log(\"〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️\");\n\n        console.log(chalk.yellow.bold(`👨‍💻 Olá ${clone.user_dev.name}!`));\n    },\n\n    async init(namespace,id) {\n        if(!clone.set_config) {\n            console.log('🙁 ' + chalk.red.bold(`config não inicializado...`));\n            console.log('🤔 ' + chalk.blue(`você chamou setConfig() ?`));\n            return\n        }\n        clone.splash()\n        let wg_info = chalk.green.bold(`[🏷️ NS:${namespace}] [🪪 ID:${id}]`)\n        console.log('👀 procurando widget ' + wg_info);\n\n        let path = `widgets/${namespace}/${id}`\n        let widget = await widget_model.get(path)\n        if(widget == null) {\n            console.log('🙁 ' + chalk.red.bold(`não encontrado...`));\n        } else {\n            console.log('👍 ' + chalk.green.bold(`achei`));\n            console.log('💫 ' + chalk.blue(`clonando em na pasta `)+clone.config.widgets_folder);\n            //console.log('widget',widget);        \n            let content = \"<template>\\n\\t\"+widget.template+\"\\n</template>\"\n            content = content + \"\\n<script>\\nexport default \"+widget.script+\"\\n</script>\"\n            let file_path = clone.config.widgets_folder+'/'+widget.id+'.vue'\n            await writeFileSync(file_path,content)\n            console.log('💫 ' + chalk.blue(`arquivo `)+widget.id+'.vue' + chalk.green.bold(` salvo com sucesso!`));\n        }\n\n        \n        //server.init(creator.config)\n    }\n}\n\n\nexport default clone"],"names":["key","iv1","fconfig","CryptoJS","enc","Utf8","parse","AES","decrypt","keySize","iv","mode","ECB","padding","pad","Pkcs7","JSON","plainText","toString","initializeApp","rdb","getDatabase","app","rdbref","path","ref","widget_model","get","then","snap","val","onValue","value","set","e","Promise","reject","server","cfg_widgets","appRoot","user_dev","init","config","widgets_folder","chokidar","watch","persistent","on","stats","path_names","split","fileChange","size","console","log","chalk","green","bold","read","filePath","data","readFileSync","encoding","resolve","error","code","fileName","blue","m","userdev","self","widget","widget_item","widget_info","widget_last","template","script","parseOk","pathWG","pathWGUser","pathWGBkp","res","parseComponent","content","trim","scriptObj","Function","func","getWidgetInfo","red","name","message","undefined","id","namespace","commit","checkFirstVersion","infoLog","devs","version","wg","_widget_item","publish_widget","checkNewVersion","prod","widget_new","_temp2","manager","_temp","cfg_gadgets","gadgets_folder","pathJSON","pathMD","dotPosition","lastIndexOf","substr","dataJSON","dataMD","gadget","objJSON","checkDataJSON","readme","publish_gadget","category","gadget_last","missingField","field","attribute_name","location","author","description","homepage","icon","main_widget","main_widget_namespace","loadIcon","data_icon","_exit2","slash_position","charAt","icon_file_name","file_path","path_folder","existsSync","exist","sharp","image","metadata","width","height","resize","img_new","toBuffer","img_buffer","img_base64","length","format","_temp5","_temp4","creator","prefix","set_config","setPrefix","setConfig","splash","yellow","server_widgets","server_gadgets","clone","wg_info","writeFileSync"],"mappings":"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"}