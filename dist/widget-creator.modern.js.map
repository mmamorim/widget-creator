{"version":3,"file":"widget-creator.modern.js","sources":["../src/e2aWidget/models/firebase/firebase.js","../src/e2aWidget/models/firebase/config-key.js","../src/e2aWidget/models/widget-model.js","../src/server/widget_item.js","../src/server/server-widgets.js","../src/server/manager-widgets.js","../src/server/server-gadgets.js","../src/server/manager-gadgets.js","../src/creator/creator.js","../src/clone/clone.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getDatabase } from \"firebase/database\";\nimport config from \"./config-key.js\"\n\n// Your web app's Firebase configuration\nconst fconfig = config();\n//console.log(\"fconfig\",fconfig);\n// Initialize Firebase\nconst app = initializeApp(fconfig, 'users-rtdb');\nconst rdb = getDatabase(app);\n\nexport { rdb }\n","\nimport CryptoJS from \"crypto-js\"\n\nexport default function() {\n    const key = CryptoJS.enc.Utf8.parse(\"hf8685nfhfhjs9h8\");\n    const iv1 = CryptoJS.enc.Utf8.parse(\"hf8685nfhfhjs9h8\");\n    const plainText = CryptoJS.AES.decrypt('nQcXOmRHFeJxZtK8z0vg6mw+56NosLs/8I9POQWFEBs5ZJzqraJEe+9S6xaW8eHpNubzsmX+5qvFciisOtgvu57msPSmcPy3wnRYPzRbKDen30JgAaY6uzufSp+tZBeeMEDLVBJwPu/vSLd7qJdw3ofJ4uiIACAPiuKcg5k//ox3n1elzqwdMpBgsLkIhvo8YFnGWVGHr52t8inxEY28w6JV6RLOe95+6lwQoy94998FQNKyHg08GHCxaDXLb2gPwpgIHj8fS/SJAjxE8UTPBS8r+4IL3RH3HseQLHW4pkFW0aCtlwjPtKsziGIMTFcjQhIVxw648OC7MCaXTfuvUszpdboCWEH6SYCa1xgluKzgASnhDZJbU65mV0sqnGh8NFRxcrzU6eCGNKIyfS61b+6vfJD1NnsBhHXnwiCHewqavymbBWyl3Wt31UptpM4kVH7WLoZohbH509x5KMqJtg==', key, {\n        keySize: 16,\n        iv: iv1,\n        mode: CryptoJS.mode.ECB,\n        padding: CryptoJS.pad.Pkcs7\n    });\n    \n    return JSON.parse(plainText.toString(CryptoJS.enc.Utf8));\n}","import { rdb } from \"./firebase/firebase.js\"\nimport { ref, get, onValue, set } from \"firebase/database\";\n\nconst rdbmode = \"dev\" //\"dev\" //\"prod\"\nconst paths = {\n    \"prod\": \"/prod/\",\n    \"dev\": \"/dev/\"\n}\nconst rdbref = (path) => {\n    //console.log(\"acessando...\",paths[rdbmode]+path);\n    return ref(rdb, paths[rdbmode] + path)\n}\n\nexport default {\n    rdb,\n    rdbref,\n\n    async get(path) {\n        let snap = await get(rdbref(path))\n        return snap.val()\n    },\n\n    onValue(path, func) {\n        onValue(rdbref(path), (snap) => {\n            func(snap.val())\n        })\n    },\n\n    async set(path, value) {\n        await set(rdbref(path), value)\n    },\n}","import { parseComponent } from 'vue-sfc-parser'\nimport chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\n\nconst widget_item = async function (data, userdev) {\n\n    const self = {\n        widget_info: {},\n        widget_last: {},\n        template: '',\n        script: '',\n        userdev,\n        parseOk: false,\n        pathWG: 'widgets/',\n        pathWGUser: 'users_devs/',\n        pathWGBkp: 'widgets_backup/',\n\n        parse(data) {\n            const res = parseComponent(data)\n            //console.log(res.styles);\n            //return\n            if (res.template == null) {\n                console.log('🙁 ' + chalk.red.bold(`erro ao interpretar template...`));\n                return\n            }\n            let template = res.template.content.trim()\n            //console.log(template)\n            if (res.script != null) {\n                //console.log(res.script.content)\n                let tokens = res.script.content.split('export default')\n                let script = tokens[1].trim()\n\n                //console.log(script);\n                try {\n                    let func = new Function('widget,wg', `return ` + script)\n                    let scriptObj = func()\n                    //console.log('scriptObj', scriptObj);\n                    let widget_info = self.getWidgetInfo(scriptObj)\n                    if (widget_info == null) {\n                        console.log('🙁 ' + chalk.red.bold(`não foi possível a publicação...`));\n                        return\n                    }\n                    self.widget_info = widget_info\n                    self.template = template\n                    self.script = script\n                    self.parseOk = true\n                    //listener.publish_widget(widget_info, template, script)\n                } catch (e) {\n                    console.log('🙁 ' + chalk.red.bold(`Ohh não! script com erro...`));\n                    console.log(chalk.blue(e.name) + ': ' + chalk.red(e.message));\n                }\n            } else {\n                console.log('🙁 ' + chalk.red.bold(`erro ao interpretar script...`));\n            }\n        },\n\n        getWidgetInfo(scriptObj) {\n            let widget_info = scriptObj.widget\n            if (widget_info == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`informações do widget não encontradas...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [widget] no component?`));\n                return null\n            }\n            if (widget_info.name == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`nome do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [name] p/ o widget?`));\n                return null\n            }\n            if (widget_info.id == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`id do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [id] p/ o widget?`));\n                return null\n            }\n            if (widget_info.namespace == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`namespace do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [namespace] p/ o widget?`));\n                return null\n            }\n            if (widget_info.commit == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`commit do widget não encontrado...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [commit] p/ o widget?`));\n                return null\n            }\n            console.log('👀 widget ' + chalk.green.bold(`[${widget_info.id}] [${widget_info.name}] encontrado...`));\n            return widget_info\n        },\n\n        async checkFirstVersion() {\n            let widget = await widget_model.get(self.pathWG)\n            if(widget == null) {\n                console.log(`👀 widget ${self.infoLog()} PRIMEIRA VERSÃO`);\n                self.widget_info.devs = {}\n                self.widget_info.devs[self.userdev.id] = self.userdev\n            } else {\n                console.log(`👀 widget ${self.infoLog()} ${widget.version} ENCONTRADA`);\n                self.widget_info.devs = widget.devs\n                self.widget_info.devs[self.userdev.id] = self.userdev\n                self.widget_last = widget\n            }\n        },\n\n        infoLog() {\n            let wg = self.widget_info\n            return chalk.green.bold(`[🏷️ NS:${wg.namespace}] [🪪 ID:${wg.id}] [NAME:${wg.name}]`)\n        }\n    }\n    self.parse(data)\n    if (self.parseOk) {\n        self.pathWG = self.pathWG + self.widget_info.namespace + '/' + self.widget_info.id\n        self.pathWGUser = self.pathWGUser + self.userdev.id+'/widgets'\n        self.pathWGBkp = self.pathWGBkp + self.widget_info.namespace + '/' + self.widget_info.id + '/' + self.widget_info.version\n        await self.checkFirstVersion()\n    } else {\n        self.pathWG = self.pathWG + 'no-id'\n        self.pathWGUser = self.pathWGUser + 'no-id'\n        self.pathWGBkp = self.pathWGBkp + 'no-id'\n    }\n    return self\n}\n\nexport default widget_item","import chokidar from 'chokidar'\nimport appRoot from 'app-root-path'\nimport chalk from 'chalk'\nimport { readFileSync } from 'fs'\nimport manager from './manager-widgets.js'\n\nconst server = {\n    cfg_widgets: '',\n    path: appRoot.path + \"/\",\n    user_dev: {}, \n\n    init(config) {\n        //console.log('config',config);\n        server.cfg_widgets = config.widgets_folder\n        server.path = server.path + server.cfg_widgets\n        server.user_dev = config.user_dev\n\n        const watcher = chokidar.watch(server.path, {\n            persistent: true\n        });\n        watcher\n            .on('change', (path, stats) => {\n                let path_names = path.split(`/${server.cfg_widgets}/`)\n                //console.log(path_names)\n                server.fileChange(path, path_names[1], stats.size)\n            })\n            console.log('📡 ' + chalk.green.bold(`escutando por widgets na pasta `)+server.cfg_widgets);        \n    },\n\n    async read(filePath) {\n        try {\n            let data = readFileSync(filePath, { encoding: 'utf8' })\n            return data\n        } catch (error) {\n            if (error.code == 'ENOENT') {\n                console.log(`[${filePath}] não encontrado!`);\n            } else {\n                console.log(`[${filePath}] ERRO desconhecido!`);\n            }\n        }\n    },\n\n    async fileChange(path, fileName, size) {\n        //console.log({path,fileName,size});\n        console.log('👀 ' + chalk.blue.bold(`Opa! percebi algo...`));\n        console.log('👀 ' + chalk.green.bold(`[${fileName}] alterado...`));\n        let data = await server.read(path)\n        //console.log(\"data\", data);\n        let m = manager(server.user_dev) \n        await m.parse(data)\n        if(m.widget.parseOk) {\n            //console.log('parse ok');\n            //console.log('m.widget',m.widget.widget_info);\n            await m.publish_widget()\n            console.log('📡 ' + chalk.green.bold(`escutando por widgets na pasta `) + server.cfg_widgets);\n        }\n    }\n\n}\n\nexport default server","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\nimport widget_item from \"./widget_item.js\"\n\nconst manager = function (userdev) {\n    const self = {\n        widget: null,\n        userdev,\n\n        async parse(data) {\n            self.widget = await widget_item(data, self.userdev)\n        },\n\n        async publish_widget() {\n            //console.log('self.widget.pathWG',self.widget.pathWG);\n\n            await self.checkNewVersion()\n            if (self.widget.widget_info.prod == undefined) {\n                self.widget.widget_info.prod = false\n            }\n            let widget_new = self.widget.widget_info\n            widget_new.template = self.widget.template\n            widget_new.script = self.widget.script\n            await widget_model.set(self.widget.pathWG, widget_new)\n            console.log(`🚀 widget ${self.widget.infoLog()} versão ${widget_new.version} PUBLICADA!`);\n            let path_dev = self.widget.pathWGUser+'/'+widget_new.namespace+'/'+widget_new.id\n            await widget_model.set(path_dev, widget_new.namespace + '/' + widget_new.id)\n        },\n\n        async checkNewVersion() {\n            let widget_info = self.widget.widget_info \n            let widget = self.widget.widget_last\n            //console.log('widget.commit', widget.commit);\n            //console.log('widget_info.commit', widget_info.commit);\n            if (widget.commit != undefined && widget.commit != widget_info.commit) {\n                console.log('🔥 novo commit ' + chalk.green.bold(`[${widget.id}] [${widget.name}] ${widget_info.commit}`));\n                //let backup_path = 'widgets_backup/' + widget_info.namespace + '/' + widget.id + '/' + widget.version\n                await widget_model.set(self.widget.pathWGBkp, widget)\n                console.log('🗃️  widget antigo ' + chalk.green.bold(`[${widget.id}] [${widget.name}] backup versão ${widget.version} armazenado`));\n                widget.version++\n            }\n\n        }\n    }\n    return self\n}\n\nexport default manager","import chokidar from 'chokidar'\nimport appRoot from 'app-root-path'\nimport chalk from 'chalk'\nimport { readFileSync, existsSync } from 'fs'\nimport manager from './manager-gadgets.js'\nimport sharp from 'sharp'\n\nconst server = {\n    cfg_gadgets: '',\n    path: appRoot.path + \"/\",\n    user_dev: {},\n\n    init(config) {\n        //console.log('config',config);\n        server.cfg_gadgets = config.gadgets_folder\n        server.path = server.path + server.cfg_gadgets\n        server.user_dev = config.user_dev\n\n        const watcher = chokidar.watch(server.path, {\n            persistent: true\n        });\n        watcher.on('change', (path, stats) => {\n            let path_names = path.split(`/${server.cfg_gadgets}/`)\n            //console.log(path_names)\n            server.fileChange(path, path_names[1], stats.size)\n        })\n        console.log('📡 ' + chalk.green.bold(`escutando por GADGETS na pasta `) + server.cfg_gadgets);\n    },\n\n    async read(filePath) {\n        try {\n            let data = readFileSync(filePath, { encoding: 'utf8' })\n            return data\n        } catch (error) {\n            if (error.code == 'ENOENT') {\n                console.log(`[${filePath}] não encontrado!`);\n            } else {\n                console.log(`[${filePath}] ERRO desconhecido!`);\n            }\n        }\n    },\n\n    async fileChange(path, fileName, size) {\n        //console.log({path,fileName,size});\n        console.log('👀 ' + chalk.blue.bold(`Opa! percebi algo...`));\n        console.log('👀 ' + chalk.green.bold(`[${fileName}] alterado...`));\n\n        let pathJSON = ''\n        let pathMD = ''\n        let dotPosition = path.lastIndexOf(\".\")\n        let extension = path.substr(dotPosition)\n        //console.log('extension',extension);\n        if (extension == '.json') {\n            //console.log('json alterado');\n            pathJSON = path\n            pathMD = path.substr(0, dotPosition) + '.md'\n        } else {\n            //console.log('md alterado');\n            pathJSON = path.substr(0, dotPosition) + '.json'\n            pathMD = path\n        }\n        //console.log('pathJSON',pathJSON);\n        //console.log('pathMD',pathMD);\n        let dataJSON = await server.read(pathJSON)\n        let dataMD = await server.read(pathMD)\n        //console.log(\"dataJSON\", dataJSON);\n        //console.log(\"dataMD\", dataMD);\n\n        let m = manager(server.user_dev)\n        await m.parse(dataJSON, dataMD)\n        if (m.gadget.parseOk) {\n            //console.log('parse ok');\n            let data_icon = await server.loadIcon(m.gadget, path)\n            if (!data_icon) {\n                console.log('🙁 ' + chalk.red.bold(`GADGET com problemas...`));\n            } else {\n                m.gadget.icon = data_icon\n            }\n            await m.publish_gadget()\n            console.log('📡 ' + chalk.green.bold(`escutando por GADGETS na pasta `) + server.cfg_gadgets);\n        } else {\n            console.log('🙁 ' + chalk.red.bold(`GADGET parse error...`));\n        }\n    },\n\n    async loadIcon(gadget, path) {\n        let slash_position = path.lastIndexOf(\"/\")\n        let path_folder = path.substr(0, slash_position)\n        //console.log('path_folder', path_folder);\n        //console.log('gadget.icon', gadget.icon);\n        if (gadget.icon.charAt(0) == '@') {\n            let icon_file_name = gadget.icon.substr(1)\n            //console.log('icon_file_name', icon_file_name);\n            let file_path = path_folder + '/' + icon_file_name\n            let exist = await existsSync(file_path)\n            if (exist) {\n                let image = await sharp(file_path)\n                const metadata = await image.metadata()\n                //console.log('metadata',metadata);\n                let size_prefer = 64\n                if(metadata.width != size_prefer || metadata.height != size_prefer) {\n                    console.log('📸 ' + chalk.red.bold(`Tamanho da imagem do icone diferente de ${size_prefer}x${size_prefer}...`)+' redimensionando...');\n                }\n                let img_new = image.resize(size_prefer, size_prefer)\n                let img_buffer = await img_new.toBuffer()\n                let img_base64 = img_buffer.toString('base64')\n                //let image = await sharp('./artes/logo.svg')\n                console.log('📸 ' + chalk.green.bold(`Imagem do icone gerada: ${img_base64.length} bytes`)+ ' ✔️');\n                //console.log(img_base64);\n                //console.log(img_base64.length);\n                let data_uri_prefix = 'data:image/' + metadata.format + ';base64,'\n                let data = data_uri_prefix + img_base64\n                //console.log('data', data);\n                return data\n            } else {\n                console.log('🙁 ' + chalk.red.bold(`imagem do icone `) + icon_file_name + chalk.red.bold(' não encontrada'));\n                return false\n            }\n        }\n        return gadget.icon\n    }\n}\n\nexport default server","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\n//import widget_item from \"./widget_item.js\"\n\nconst manager = function (userdev) {\n    const self = {\n        gadget: null,\n        userdev,\n\n        async parse(dataJSON, dataMD) {\n            let objJSON = JSON.parse(dataJSON)\n            //console.log(objJSON);\n            //console.log(dataMD);\n            let ok = self.checkDataJSON(objJSON)\n            if (!ok) {\n                self.gadget = { parseOk: false } //await widget_item(data, self.userdev)\n                return false\n            } else {\n                self.gadget = objJSON\n                self.gadget.readme = dataMD\n                self.gadget.parseOk = true\n            }\n        },\n\n        async publish_gadget() {\n            //console.log('self.gadget', self.gadget);\n            await self.checkNewVersion()\n            if (self.gadget.prod == undefined) {\n                self.gadget.prod = false\n            }\n            let path = `gadgets/${self.gadget.category}/${self.gadget.id}`\n            await widget_model.set(path, self.gadget)\n            // Atualizando desenvolvedor\n            let path_dev = `users_devs/${self.userdev.id}/gadgets/${self.gadget.category}/${self.gadget.id}`\n            //console.log(path_dev,`${self.gadget.category}|${self.gadget.id}`);\n            await widget_model.set(path_dev, `${self.gadget.category}|${self.gadget.id}`)\n            console.log('🚀 novo gadget ' + chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] versão ${self.gadget.version} PUBLICADO!`));\n        },\n\n        async checkNewVersion() {\n            let path = `gadgets/${self.gadget.category}/${self.gadget.id}`\n            //console.log('path', path);\n            let gadget_last = await widget_model.get(path)\n            if (gadget_last == null) {\n                console.log(`👀 gadget ${chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] ${self.gadget.commit}`)} PRIMEIRA VERSÃO`);\n                self.gadget.version = 1\n                return\n            } else {\n                self.gadget.version = gadget_last.version\n            }\n            //console.log('gadget_last', gadget_last);\n            if (gadget_last.commit != self.gadget.commit) {\n                console.log('🔥 novo commit ' + chalk.green.bold(`[${self.gadget.category}] [${self.gadget.id}] ${self.gadget.commit}`));\n                //let backup_path = 'widgets_backup/' + widget_info.namespace + '/' + widget.id + '/' + widget.version\n                let backup_path = `gadgets_backup/${self.gadget.category}/${self.gadget.id}/${self.gadget.version}`\n                await widget_model.set(backup_path, gadget_last)\n                console.log('🗃️  gadget antigo ' + chalk.green.bold(`[${gadget_last.category}] [${gadget_last.id}] backup versão ${gadget_last.version} armazenado`));\n                if(self.gadget.version == undefined) {\n                    self.gadget.version = 1\n                } else { \n                    self.gadget.version++\n                }\n            }\n\n        },\n\n        missingField(field, attribute_name, location) {\n            if (field == undefined) {\n                console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n                console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n                return false\n            }\n            return true\n        },\n\n        checkDataJSON(objJSON) {\n            if (!self.missingField(objJSON.id, 'id', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.category, 'category', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.name, 'name', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.commit, 'commit', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.author, 'author', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.description, 'description', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.homepage, 'homepage', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.icon, 'icon', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.main_widget, 'main_widget', 'JSON do gadget')) {\n                return false\n            }\n            if (!self.missingField(objJSON.main_widget_namespace, 'main_widget_namespace', 'JSON do gadget')) {\n                return false\n            }\n            console.log('👀 gadget ' + chalk.green.bold(`[${objJSON.id}] [${objJSON.name}] ok`));\n            return true\n        },\n\n    }\n    return self\n}\n\nexport default manager","import chalk from 'chalk'\nimport server_widgets from \"../server/server-widgets.js\"\nimport server_gadgets from \"../server/server-gadgets.js\"\n\nconst creator = {\n    prefix: '',\n    user_dev: '',\n    set_config: false,\n    config: undefined,\n\n    setPrefix(prefix) {\n        creator.prefix = prefix\n    },\n\n    missingField(field, attribute_name, location) {\n        if (field == undefined) {\n            console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n            console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n            return false\n        } \n        return true\n    },\n\n    setConfig(config) {\n        creator.set_config = true\n        if(!creator.missingField(config.user_dev,'user_dev','config.json')) {\n            return\n        }\n        if(!creator.missingField(config.user_dev.id,'user_dev.id','config.json')) {\n            return\n        }\n        if(!creator.missingField(config.user_dev.name,'user_dev.name','config.json')) {\n            return\n        }\n        creator.config = config\n        creator.user_dev = config.user_dev\n    },\n\n    splash() {\n        console.log(\"🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱\");\n        console.log(`  🟥🔷 ${creator.prefix} widget`);\n        console.log(\"  {}🟪 CREATOR (v 1.0)\");\n        console.log(\"🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱🧱\");\n\n        console.log(chalk.yellow.bold(`👨‍💻 Olá ${creator.user_dev.name}!`));\n    },\n\n    init() {\n        if(!creator.set_config) {\n            console.log('🙁 ' + chalk.red.bold(`config não inicializado...`));\n            console.log('🤔 ' + chalk.blue(`você chamou setConfig() ?`));\n            return\n        }\n        creator.splash()\n        server_widgets.init(creator.config)\n        server_gadgets.init(creator.config)\n    }\n}\n\nexport default creator","import chalk from 'chalk'\nimport widget_model from '../e2aWidget/models/widget-model.js'\nimport { writeFileSync } from 'fs'\n\nconst clone = {\n    prefix: '',\n    user_dev: '',\n    set_config: false,\n    config: undefined,\n\n    setPrefix(prefix) {\n        clone.prefix = prefix\n    },\n\n    missingField(field, attribute_name, location) {\n        if (field == undefined) {\n            console.log('🙁 ' + chalk.red.bold(`informações não encontradas...`));\n            console.log('🤔 ' + chalk.blue(`você adicionou o atributo [${attribute_name}] no ${location} ?`));\n            return false\n        } \n        return true\n    },\n\n    setConfig(config) {\n        clone.set_config = true\n        if(!clone.missingField(config.user_dev,'user_dev','config.json')) {\n            return\n        }\n        if(!clone.missingField(config.user_dev.id,'user_dev.id','config.json')) {\n            return\n        }\n        if(!clone.missingField(config.user_dev.name,'user_dev.name','config.json')) {\n            return\n        }\n        clone.config = config\n        clone.user_dev = config.user_dev\n    },\n\n    splash() {\n        console.log(\"〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️\");\n        console.log(`  🟥🔷 ${clone.prefix} widget`);\n        console.log(\"  {}🟪 CLONE (v 1.0)\");\n        console.log(\"〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️〰️\");\n\n        console.log(chalk.yellow.bold(`👨‍💻 Olá ${clone.user_dev.name}!`));\n    },\n\n    async init(namespace,id) {\n        if(!clone.set_config) {\n            console.log('🙁 ' + chalk.red.bold(`config não inicializado...`));\n            console.log('🤔 ' + chalk.blue(`você chamou setConfig() ?`));\n            return\n        }\n        clone.splash()\n        let wg_info = chalk.green.bold(`[🏷️ NS:${namespace}] [🪪 ID:${id}]`)\n        console.log('👀 procurando widget ' + wg_info);\n\n        let path = `widgets/${namespace}/${id}`\n        let widget = await widget_model.get(path)\n        if(widget == null) {\n            console.log('🙁 ' + chalk.red.bold(`não encontrado...`));\n        } else {\n            console.log('👍 ' + chalk.green.bold(`achei`));\n            console.log('💫 ' + chalk.blue(`clonando em na pasta `)+clone.config.widgets_folder);\n            //console.log('widget',widget);        \n            let content = \"<template>\\n\\t\"+widget.template+\"\\n</template>\"\n            content = content + \"\\n<script>\\nexport default \"+widget.script+\"\\n</script>\"\n            let file_path = clone.config.widgets_folder+'/'+widget.id+'.vue'\n            await writeFileSync(file_path,content)\n            console.log('💫 ' + chalk.blue(`arquivo `)+widget.id+'.vue' + chalk.green.bold(` salvo com sucesso!`));\n        }\n\n        \n        //server.init(creator.config)\n    }\n}\n\n\nexport default clone"],"names":["rdb","getDatabase","initializeApp","key","CryptoJS","enc","Utf8","parse","iv1","AES","decrypt","keySize","iv","mode","ECB","padding","pad","Pkcs7","JSON","plainText","toString","config","rdbref","path","ref","widget_model","async","get","val","onValue","func","snap","value","set","cfg_widgets","appRoot","user_dev","init","server","widgets_folder","chokidar","watch","persistent","on","stats","path_names","split","fileChange","size","console","log","chalk","green","bold","filePath","readFileSync","encoding","error","code","fileName","blue","data","read","m","userdev","self","widget","widget_info","widget_last","template","script","parseOk","pathWG","pathWGUser","pathWGBkp","res","parseComponent","red","content","trim","scriptObj","getWidgetInfo","e","name","message","undefined","id","namespace","commit","infoLog","devs","version","wg","checkFirstVersion","widget_item","checkNewVersion","prod","widget_new","path_dev","manager","publish_widget","cfg_gadgets","gadgets_folder","pathJSON","pathMD","lastIndexOf","substr","dotPosition","dataJSON","gadget","dataMD","objJSON","checkDataJSON","readme","category","gadget_last","backup_path","missingField","field","attribute_name","location","author","description","homepage","icon","main_widget","main_widget_namespace","loadIcon","data_icon","publish_gadget","slash_position","path_folder","charAt","icon_file_name","file_path","image","sharp","metadata","width","size_prefer","height","img_new","resize","img_base64","toBuffer","length","format","creator","prefix","set_config","setPrefix","setConfig","splash","yellow","server_widgets","server_gadgets","clone","wg_info","writeFileSync"],"mappings":"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"}